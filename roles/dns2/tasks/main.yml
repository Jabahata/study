---
- name: making cache
  yum:
    update_cache: yes
    
- name: updating packages
  yum:
    name: '*'
    state: latest

- name: checking if named is installed
  stat:
    path: /usr/sbin/named
  register: named_check

- name: debugging named check result
  debug:
    msg: "named check result: {{ named_check }}"

- name: installing bind and bind-utils
  yum:
    name:
      - bind
      - bind-utils
    state: present

- name: checking if chrony installed
  stat:
    path: /bin/chronyc
  register: chrony_check

- name: debugging chrony check result
  debug:
    msg: "chrony check result: {{ chrony_check }}"

- name: installing chrony
  yum:
    name: chrony
    state: present
  when: not chrony_check.stat.exists

- name: configuring /etc/chrony.conf
  template:
    src: chronyconf.j2
    dest: /etc/chrony.conf
    backup: yes

- name: restart chrony, if its installed
  service:
    name: chronyd
    state: restarted
  when: chrony_check.stat.exists

- name: starting and enabling service if not installed
  service:
    name: chronyd
    state: started
    enabled: yes
  when: not chrony_check.stat.exists

- name: getting uuid of network
  command: nmcli -g uuid con show
  register: uuid_result

- name: configuring IP address
  template:
    src: interface.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-enp0s3
    backup: yes

- name: getting a hostname
  shell: hostname
  register: current_hostname

- name: setting a hostname
  hostname:
    name: dns-server-56.ziyotek.local
  when: current_hostname.stdout != "dns-server-56.ziyotek.local"

- name: configuring /etc/named.conf
  template:
    src: namedconf.j2
    dest: /etc/named.conf
    backup: yes

- name: restart named, if its installed
  service:
    name: named
    state: restarted
  when: named_check.stat.exists

- name: starting and enabling named, if not installed
  service:
    name: named
    state: started
    enabled: yes
  when: not named_check.stat.exists

- name: Reload ziyotek.local zone
  command: rndc reload ziyotek.local

- name: Reload 1.168.192.in-addr.arpa zone
  command: rndc reload 1.168.192.in-addr.arpa

- name: setting firewall rules for ntp
  firewalld:
    service: ntp
    permanent: yes
    immediate: yes
    state: enabled

- name: setting firewall rules for dns
  firewalld:
    service: dns
    permanent: yes
    immediate: yes
    state: enabled
    
- name: reloading firewalld
  service:
    name: firewalld
    state: reloaded

- name: creating user "adam"
  user:
    name: adam
    state: present
    create_home: yes

- name: adding "adam" to sudoers file
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^adam'
    line: 'adam ALL=(ALL) NOPASSWD:ALL'
    validate: 'visudo -cf %s'

- name: restarting network
  service:
    name: network
    state: restarted